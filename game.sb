' https://github.com/featherbear/balloon-shooting-challenge

'The Challenge - Develop a shooting game, the player goal is to shoot the balloon down.  

'   CONTROLS
'* The player can move the cannon up and down using the arrow keys
'* To fire a bullet the player will press [SPACE].

'   RULES
'* The balloon should move up and down randomly.
'* The player can shoot one bullet at a time.
'* Only when the bullet is out of the game then the player can shoot again.
'* The game ends when the balloon is shot down, please show the amount of missed shots.
'* The bullet speed should be 1.5 times the speed of the balloon.
'* The balloon can change directions (up or down) at any time.

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

' = Settings go here =

' Balloon speed - How fast the balloon moves
i_balloonSpeed = 5

' Balloon randomness rate - How frequent the balloon changes direction
i_balloonRandomness = 1

' Player speed - How fast the player moves
i_playerSpeed = 5

' Bullet speed - How fast the bullet moves (Specs require 1.5x the balloon speed)
i_bulletSpeed = 1.5 * i_balloonSpeed

' Variables
i_shotsFired = 0
b_isShotFired = 0 ' No booleans, welp.


' = "Function" arguments and returns =
args = -------------------------------------------------------------0
rets = -------------------------------------------------------------0

' = Setup UI =

GraphicsWindow.BackgroundColor = "White"
GraphicsWindow.Title = "Balloon Shooting Challenge"
GraphicsWindow.CanResize = 0

' Dimensions - So the game window in the challenge specification had an aspect ratio of 1.77:1 (l:h)
GraphicsWindow.Height = 500
GraphicsWindow.Width = GraphicsWindow.Height * 1.77


' Shoot the bullet on SPACEBAR
Sub shootBullet
  If (b_isShotFired = 0) Then
    TextWindow.WriteLine("FIRE")
    b_isShotFired = 1
    i_shotsFired = i_shotsFired + 1
    
    ' Create the bullet
    _bulletX = GraphicsWindow.Width - objs[0]["width"] - objs[1]["width"]
    _bulletY = Shapes.GetTop(objs[0]["image"]) + objs[0]["height"]/2 - objs[1]["height"]/2
    Shapes.ShowShape(objs[1]["image"])
    Shapes.Move(objs[1]["image"], _bulletX, _bulletY)
  EndIf
EndSub

' Move the player up
Sub moveUp
  ' If the top of the player has not exceeded the game bounds, then move up
  _top = Shapes.GetTop(objs[0]["image"])
  _left = Shapes.GetLeft(objs[0]["image"])
  _bound = 0
  
  If _top > 0 Then
    Shapes.Move(objs[0]["image"], _left, _top - i_playerSpeed)
  EndIf
  
  If _top < _bound Then
    Shapes.Move(objs[0]["image"], _left, _bound)
  EndIf
  
EndSub


' Move the player down
Sub moveDown
  ' If the bottom of the player has not exceeded the game bounds, then move down
  _top = Shapes.GetTop(objs[0]["image"])
  _left = Shapes.GetLeft(objs[0]["image"])
  _bound = GraphicsWindow.Height - objs[0]["height"]
  
  If _top < _bound Then
    Shapes.Move(objs[0]["image"], _left, _top + i_playerSpeed)
  EndIf
  
  If _top > _bound Then
    Shapes.Move(objs[0]["image"], _left, _bound)
  EndIf

EndSub

GraphicsWindow.KeyDown = evt_keyPress
Sub evt_keyPress
  lastKey = GraphicsWindow.LastKey
  
  If (lastKey = "Space") Then
    shootBullet()
    
  ElseIf (lastKey = "Up") Then 
    moveUp()
  ElseIf (lastKey = "W") Then 
    moveUp()
    
  ElseIf (lastKey = "Down") Then 
    moveDown()
  ElseIf (lastKey = "S") Then 
    moveDown()
    
  Else
    TextWindow.WriteLine(lastKey)  
  EndIf    
EndSub



' obj_init - Loads an image into the `objs` ... thing... Hides the sprite from display
objs = -------------------------------------------------------------0
Sub obj_init
  ' args[0] - image to load
  ' args[1] - n-index to store in `objs`
  objs[args[1]]["sprite"] = ImageList.LoadImage(args[0])
  objs[args[1]]["image"] = Shapes.AddImage(objs[args[1]]["sprite"])
  objs[args[1]]["height"] = ImageList.GetHeightOfImage(objs[args[1]]["sprite"])
  objs[args[1]]["width"] = ImageList.GetWidthOfImage(objs[args[1]]["sprite"])
  Shapes.HideShape(objs[args[1]]["image"])
  TextWindow.WriteLine("Initialised image: " + objs[args[1]]["image"] + " @ " + args[0])
EndSub


' --------------------
args[0] = Program.Directory + "\sprite_cannon.png"
args[1] = 0
obj_init()

args[0] = Program.Directory + "\sprite_bullet.png"
args[1] = 1
obj_init()

args[0] = Program.Directory + "\sprite_balloon.png"
args[1] = 2
obj_init()

' --------------------


' Initialise the player to the bottom right of the screen
Shapes.Move(objs[0]["image"], GraphicsWindow.Width - objs[0]["width"], GraphicsWindow.Height - objs[0]["height"])
Shapes.ShowShape(objs[0]["image"])

' Initialise the balloon to the top left of the screen
' We don't actually have to do this as Shapes are created at origin (0,0) automatically... but eh why not
Shapes.Move(objs[2]["image"], 0, 0)
Shapes.ShowShape(objs[2]["image"])


